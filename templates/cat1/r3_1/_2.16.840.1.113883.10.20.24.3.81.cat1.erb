<entry>
  <act classCode="ACT" moodCode="EVN" <%== negation_indicator(entry) %>>
    <!-- Transfer From Act -->
    <templateId root="2.16.840.1.113883.10.20.24.3.141"/>
    <id root="<%= UUID.generate %>" />
    <code code="ENC" codeSystem="2.16.840.1.113883.5.6" displayName="Encounter" codeSystemName="ActClass"/>
    <entryRelationship typeCode="SUBJ">
    	<encounter classCode="ENC" moodCode="EVN">
    		<templateId root="2.16.840.1.113883.10.20.24.3.81" extension="2016-02-01"/>
    		<id root="1.3.6.1.4.1.115" extension="<%= "#{entry.transferFrom.id}#{entry.id}".hash.abs.to_s(16) %>"/>
    		<code code="77305-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="transferred from"/>
    		<statusCode code="completed"/>
    		<participant typeCode="ORG">
    	    <time>
            <low <%= value_or_null_flavor(entry.transferFrom.time) %>/>
            <high <%= value_or_null_flavor(entry.transferFrom.time) %>/>
          </time>
    	    <participantRole classCode="LOCE">
    	      <% 
    	        entry.transferFrom.codes[entry.transferFrom.code_system] = [entry.transferFrom.code]
    	        transfer_vs_map = [{"set"=>entry.transferFrom.code_system, "values"=>[entry.transferFrom.code]}]
    	        transfer_oid = (data_criteria.field_values || {})['TRANSFER_FROM'].try(:code_list_id)
    	        options = {'value_set_map' => transfer_vs_map, 'preferred_code_sets' => ['SNOMED-CT', 'ICD-9-CM', 'ICD-10-CM', 'CPT']}
    	        options['extra_content'] = "sdtc:valueSet=\"#{transfer_oid}\"" if transfer_oid
    	        %>
    	        <%== code_display(entry.transferFrom, options) %>
    	      </participantRole> 
    	    </participant>
    	</encounter>
    </entryRelationship>
    <%== render(:partial => 'reason', :locals => {:entry => entry, :reason_oids=>field_oids["REASON"], :r2_compatibility => r2_compatibility}) %>
  </act>
</entry>
